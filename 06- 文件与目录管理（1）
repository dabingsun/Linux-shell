Linux的目录结构为树状结构，最顶级的目录为根目录 /。其他目录通过挂载可以将它们添加到树中，通过解除挂载可以移除它们。
-----绝对路径与相对路径
绝对路径：路径的写法，由根目录 / 写起，例如： /usr/share/doc 这个目录。
路径的写法，不是由 / 写起，例如由 /usr/share/doc 要到 /usr/share/man 底下时，可以写成： cd ../man 这就是相对路径的写法（./当前 ../上一个）
-----处理目录的常用命令
    ls: 列出目录 ls -l 带出详细信息列出 (List files)
    cd：切换目录 cd 绝对路径/相对路径  cd / 返回根目录 (Change directory)
    pwd：显示目前的目录 重要 （Print Working Directory）
    mkdir：创建一个新的目录  (Make directory)
    rmdir：删除一个空的目录  (Remove directory)
    cp: 复制文件或目录 (copy file)
    rm: 移除文件或目录 (Remove file)
    mv: 移动文件与目录，或修改文件与目录的名称 (Move file)
    
-------ls-------
   ls -a ：全部的文件，连同隐藏档( 开头为 . 的文件) 一起列出来(常用)
   ls -d ：仅列出目录本身，而不是列出目录内的文件数据(常用)--->仅列出目录本身
   ls -l ：长数据串列出，包含文件的属性与权限等等数据；(常用)  
   ls -al: 目录下的所有文件列出来(含属性与隐藏档)

-------cd-------
cd [相对路径或绝对路径]
cd / 返回根目录

-------pwd-------
pwd 显示目前的目录  
pwd -P 显示出确实的路径，而非使用连结 (link) 路径。

-------mkdir-------
创建目录
-m ：配置文件的权限喔！直接配置，不需要看默认权限 (umask) 的脸色
-p ：帮助你直接将所需要的目录(包含上一级目录)递归创建起来
example: 
mkdir -m 771 test
mkdir -p test1/test2/test3
 
-------rmdir-------
删除目录
rmdir 目录名称
rmdir [-p] 目录1/目录2/目录3 #连续删除多个目录（都为空的时候）

-------cp-------
cp 即拷贝文件和目录
cp [-adfilprsu] 来源档(source) 目标档(destination)
-a -i -p -r
    -a：相当于 -pdr 的意思，至于 pdr 请参考下列说明；(常用)
    -i：若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)
    -p：连同文件的属性一起复制过去，而非使用默认属性(备份常用)
    -r：递归持续复制，用於目录的复制行为；(常用)
    
    -d：若来源档为连结档的属性(link file)，则复制连结档属性而非文件本身；
    -f：为强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次；    
    -l：进行硬式连结(hard link)的连结档创建，而非复制文件本身；
    -s：复制成为符号连结档 (symbolic link)，亦即『捷径』文件；
    -u：若 destination 比 source 旧才升级 destination ！
  
-------rm-------
rm [-fir] 文件或目录
-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；
-i ：互动模式，在删除前会询问使用者是否动作 （删除前会主动询问）
-r ：递归删除啊！最常用在目录的删除了！这是非常危险的选项！！！
rm -r 文件或目录

-------mv-------
移动目录或文件
mv [-fiu] source（源） destination（目标）

    -f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；
    -i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！
    -u ：若目标文件已经存在，且 source 比较新，才会升级 (update)

